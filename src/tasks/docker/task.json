{
    "id": "B93C4522-5BEA-4118-97AE-2B560628A157",
    "name": "Docker",
    "friendlyName": "Docker",
    "description": "Build, push or run Docker images, or run a Docker command",
    "helpMarkDown": "[More Information](http://aka.ms/dockertoolsforvsts)",
    "category": "Build",
    "visibility": [
        "Build",
        "Release"
    ],
    "author": "Microsoft Corporation",
    "version": {
        "Major": 0,
        "Minor": 1,
        "Patch": 15
    },
    "demands": [],
    "groups": [
        {
            "name": "advanced",
            "displayName": "Advanced Options",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "dockerRegistryEndpoint",
            "type": "connectedService:dockerregistry",
            "label": "Docker Registry Connection",
            "helpMarkDown": "Select a Docker registry connection. Only required for commands that need to authenticate with a registry."
        },
        {
            "name": "action",
            "type": "pickList",
            "label": "Action",
            "defaultValue": "Build an image",
            "required": true,
            "options": {
                "Build an image": "Build an image",
                "Push an image": "Push an image",
                "Run an image": "Run an image",
                "Run a Docker command": "Run a Docker command"
            },
            "helpMarkDown": "Select a Docker action."
        },
        {
            "name": "dockerFile",
            "type": "filePath",
            "label": "Docker File",
            "defaultValue": "**/Dockerfile",
            "required": true,
            "visibleRule": "action = Build an image",
            "helpMarkDown": "Path to the Docker file to use. Must be within the Docker build context."
        },
        {
            "name": "buildArguments",
            "type": "multiLine",
            "properties": {
                "resizable": "true",
                "rows": "2"
            },
            "label": "Build Arguments",
            "visibleRule": "action = Build an image",
            "helpMarkDown": "Build-time variables for the Docker file. Specify each name=value pair on a new line."
        },
        {
            "name": "context",
            "type": "filePath",
            "label": "Build Context",
            "visibleRule": "action = Build an image",
            "helpMarkDown": "Path to the build context. Defaults to the directory that contains the Docker file."
        },
        {
            "name": "imageName",
            "type": "string",
            "label": "Image Name",
            "required": true,
            "visibleRule": "action = Build an image || action = Push an image || action = Run an image",
            "helpMarkDown": "Name of the Docker image to build, push or run, for instance 'fabrikam/webapp:$(Build.BuildId)'."
        },
        {
            "name": "additionalImageTags",
            "type": "multiLine",
            "properties": {
                "resizable": "true",
                "rows": "2"
            },
            "label": "Additional Image Tags",
            "defaultValue": "$(Build.SourceVersion)\n$(Build.SourceBranchName)",
            "visibleRule": "action = Build an image || action = Push an image",
            "helpMarkDown": "Additional tags for the Docker image being built or pushed."
        },
        {
            "name": "includeGitTags",
            "type": "boolean",
            "label": "Include Git Tags",
            "defaultValue": "true",
            "visibleRule": "action = Build an image || action = Push an image",
            "helpMarkDown": "Include Git tags when building or pushing the Docker image."
        },
        {
            "name": "includeLatestTag",
            "type": "boolean",
            "label": "Include Latest Tag",
            "defaultValue": "true",
            "visibleRule": "action = Build an image || action = Push an image",
            "helpMarkDown": "Include the 'latest' tag when building or pushing the Docker image."
        },
        {
            "name": "imageDigestFile",
            "type": "filePath",
            "label": "Image Digest File",
            "defaultValue": "$(Build.StagingDirectory)/Dockerfile.image",
            "visibleRule": "action = Push an image",
            "helpMarkDown": "Path to a file that is created and populated with the registry-qualified name and full repository digest of the Docker image that was pushed."
        },
        {
            "name": "removeImageAfterPush",
            "type": "boolean",
            "label": "Remove image after push",
            "defaultValue": "false",
            "visibleRule": "action = Push an image && action = always hide for now because of async publish",
            "helpMarkDown": "Remove the image after pushing."
        },
        {
            "name": "containerName",
            "type": "string",
            "label": "Container Name",
            "visibleRule": "action = Run an image",
            "helpMarkDown": "Name of the Docker container to run."
        },
        {
            "name": "ports",
            "type": "multiLine",
            "properties": {
                "resizable": "true",
                "rows": "2"
            },
            "label": "Ports",
            "visibleRule": "action = Run an image",
            "helpMarkDown": "Ports in the Docker container to publish to the host. Specify each host-port:container-port binding on a new line."
        },
        {
            "name": "volumes",
            "type": "multiLine",
            "properties": {
                "resizable": "true",
                "rows": "2"
            },
            "label": "Volumes",
            "visibleRule": "action = Run an image",
            "helpMarkDown": "Volumes to bind mount from the host. Specify each host-dir:container-dir binding on a new line."
        },
        {
            "name": "envVars",
            "type": "multiLine",
            "properties": {
                "resizable": "true",
                "rows": "2"
            },
            "label": "Environment Variables",
            "visibleRule": "action = Run an image",
            "helpMarkDown": "Environment variables for the Docker container. Specify each name=value pair on a new line."
        },
        {
            "name": "workDir",
            "type": "string",
            "label": "Working Directory",
            "visibleRule": "action = Run an image",
            "helpMarkDown": "The working directory for the Docker container."
        },
        {
            "name": "entrypoint",
            "type": "string",
            "label": "Entrypoint Override",
            "visibleRule": "action = Run an image",
            "helpMarkDown": "Override the default entrypoint for the Docker container."
        },
        {
            "name": "containerCommand",
            "type": "string",
            "label": "Command",
            "visibleRule": "action = Run an image",
            "helpMarkDown": "Command to run in the Docker container. For example, if the image contains a simple Python Flask web application you can specify 'python app.py' to launch the web application."
        },
        {
            "name": "customCommand",
            "type": "string",
            "label": "Command",
            "required": true,
            "visibleRule": "action = Run a Docker command",
            "helpMarkDown": "Docker command to execute, with arguments. For example, 'rmi -f image-name' to force remove an image."
        },
        {
            "name": "dockerHostEndpoint",
            "type": "connectedService:dockerhost",
            "label": "Docker Host Connection",
            "helpMarkDown": "Select a Docker host connection. Defaults to the agent's host.",
            "groupName": "advanced"
        },
        {
            "name": "cwd",
            "type": "filePath",
            "label": "Working Directory",
            "defaultValue": "$(System.DefaultWorkingDirectory)",
            "helpMarkDown": "Working directory for the Docker command.",
            "groupName": "advanced"
        }
    ],
    "instanceNameFormat": "Docker: $(action)",
    "execution": {
        "Node": {
            "target": "invokeDockerAction.js",
            "argumentFormat": ""
        }
    }
}