{
  "id": "/exhibitor-data",
  "cpus": 0.01,
  "mem": 32,
  "instances": 1,
  "acceptedResourceRoles": [
    "slave_public"
  ],
  "container": {
    "type": "DOCKER",
    "docker": {
      "image": "openresty/openresty:alpine",
      "network": "BRIDGE",
      "portMappings": [
        {
          "protocol": "tcp",
          "hostPort": 0,
          "containerPort": 80,
          "labels": {
              "VIP_0": "exhibitor-data:80"
          }
        }
      ]
    }
  },
  "cmd": "cat << EOF > /usr/local/openresty/nginx/conf/nginx.conf && exec /usr/local/openresty/bin/openresty -g 'daemon off;'\nworker_processes 1;\nevents {\n    worker_connections 1024;\n}\nhttp {\n    upstream backend {\n        server leader.mesos;\n    }\n    server {\n        listen 80;\n        location = / {\n            proxy_pass http://backend/exhibitor/exhibitor/v1/cluster/status;\n        }\n        location ~ /_/(.*)$ {\n            internal;\n            proxy_pass http://backend/exhibitor/exhibitor/v1/explorer/node-data?key=/\\$1;\n        }\n        location ~ /(.*)$ {\n            content_by_lua_block {\n              local cjson = require \"cjson\"\n              local resp = ngx.location.capture(\"/_/\" .. ngx.var[1])\n              local bytes = cjson.decode(resp.body).bytes\n              bytes = string.gsub(bytes, \" \", \"\")\n              if string.len(bytes) == 0 then\n                 ngx.status = 404\n                 ngx.exit(404)\n              end\n              for i = 1, string.len(bytes), 2 do\n                  ngx.print(string.char(tonumber(string.sub(bytes, i, i + 1), 16)))\n              end\n            }\n        }\n    }\n}",
  "healthChecks": [
    {
      "path": "/",
      "protocol": "HTTP",
      "portIndex": 0,
      "gracePeriodSeconds": 300,
      "intervalSeconds": 5,
      "timeoutSeconds": 20,
      "maxConsecutiveFailures": 3,
      "ignoreHttp1xx": false
    }
  ]
}